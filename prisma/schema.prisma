generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                   String         @id @default(auto()) @map("_id") @db.ObjectId
  firstName            String
  secondName           String
  password             String
  phone                Int?
  email                String         @unique
  role                 Roles
  address              String?
  business             String?
  clientReservations   Reservations[] @relation("ClientUserReservations")
  businessReservations Reservations[] @relation("BusinessUserReservations")
  businessSlots        Slots[]        @relation("BusinessUserSlots")
}

model Reservations {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  clientUserId    String    @db.ObjectId
  businessUserId  String    @db.ObjectId
  reservationDate DateTime?
  openedAt        DateTime
  time            String?
  status          Status?
  clientUser      User      @relation("ClientUserReservations", fields: [clientUserId], references: [id])
  businessUser    User      @relation("BusinessUserReservations", fields: [businessUserId], references: [id])

  @@unique([clientUserId, businessUserId])
}

model Slots {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  businessUserId String   @db.ObjectId
  date           DateTime @unique
  time           String
  isBooked       Boolean  @default(false)
  businessUser   User     @relation("BusinessUserSlots", fields: [businessUserId], references: [id])
}

enum Roles {
  client
  business
}

enum Status {
  opened
  closed
}
